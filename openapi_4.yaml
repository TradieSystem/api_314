openapi: 3.0.0
info:
  title: HomeServices API
  description: A cross reference for front-to-back end development
  version: 1.0.0
servers:
  - url: https://homeservices.com/api/v1
paths:
  /user:
    post:
      summary: Create user
      description: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: The operation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/login:
    post:
      summary: User login
      description: User login
      operationId: loginUser
      parameters:
        - name: email
          in: query
          description: users email address
          required: true
          schema:
            type: string
            format: email
        - name: password
          in: query
          description: users password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAuth'
        '400':
          description: Invalid username or password
  /user/validate:
    get:
      summary: Validate access token
      description: Validate access token provided
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Valid access token
        '401':
          description: Access token is invalid or has expired
  /user/refresh:
    post:
      summary: Refresh access token
      description: Get a new access token by providing a refresh token
      parameters:
        - name: refresh_token
          in: body
          required: true
          description: Refresh token received during auth
          schema:
            type: object
            propertie:
              refresh_token:
                type: string
      responses:
        '200':
          description: New access token and refresh token are sent to user
        '400':
          description: Invalid or expired refresh token
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: myUsername123
        firstname:
          type: string
          example: Snoop
        lastname:
          type: string
          example: Dogg
        email:
          type: string
          format: email
          example: myemail@email.com
        password:
          type: string
          example: myPassword123!!
        mobile:
          type: string
          pattern: ^\d{10}$
        address:
          type: object
          properties:
            streetname:
              type: string
              example: Sesame Street
            streetnumber:
              type: integer
              example: 7
            suburb:
              type: string
              example: Liverpool
            postcode:
              type: string
              example: 2170
          required:
            - streetname
            - streetnumber
            - suburb
            - postcode
        usertype:
          type: string
          enum:
            - Client
            - Tradesman
        CCin:
          type: object
          properties:
            CCname:
              type: string
              example: John
            CCnumber:
              type: string
              pattern: ^[0-9]{16}$
              example: 1234 5678 9123 456
            CCsecurity:
              type: string
              pattern: ^[0-9]{3}$
              example: 123
        CCout:
          type: object
          properties:
            CCname:
              type: string
              example: Alice
            CCnumber:
              type: string
              pattern: ^[0-9]{16}$
              example: 9876 5432 1987 6543
            CCsecurity:
              type: string
              pattern: ^[0-9]{3}$
              example: 321
    ResponseAuth:
      type: object
      properties:
        token:
          type: string
          description: The authentication and refresh token for the user
